
	1: Create a socket

		Purpose: Establish a communication endpoint.
		Functions Needed: socket()
	2: Set socket options (optional but recommended)

		Purpose: Reuse the address/port to avoid issues with repeated runs.
		Functions Needed: setsockopt()
	3: Bind the socket

		Purpose: Associate the socket with a specific IP address and port.
		Functions Needed: bind()
	4: Set the socket to listen

		Purpose: Allow the socket to accept incoming connections.
		Functions Needed: listen()
	5: Accept incoming connections

		Purpose: Handle a client’s request to connect to the server.
		Functions Needed: accept()
	6: Set the socket to non-blocking mode

		Purpose: Ensure that operations like read and write don’t block execution if no data is available.
		Functions Needed: fcntl()
	7: Monitor sockets for activity

		Purpose: Detect when sockets are ready for reading or writing.
		Functions Needed: poll(), select(), or kqueue() (choose one)
	8: Read and write data

		Purpose: Handle communication with the connected client.
		Functions Needed: read(), write(), or recv()/send()
	9: Close the sockets

		Purpose: Free resources and properly close connections.
		Functions Needed: close()